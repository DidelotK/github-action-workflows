name: 'Apply terraform change on infrastructure'

on:
  issue_comment:
    types: [created]

jobs:
  prepare:
    if: contains(github.event.issue.labels.*.name, 'release')
    name: prepare
    runs-on: ubuntu-latest
    outputs:
      PLAN_WORKFLOW: ${{ steps.get-plan-info.outputs.PLAN_WORKFLOW }}
      PLAN_WORKFLOW_RUN_ID: ${{ steps.get-plan-info.outputs.PLAN_WORKFLOW_RUN_ID }}
      PLAN_WORKFLOW_RUN_NUMBER: ${{ steps.get-plan-info.outputs.PLAN_WORKFLOW_RUN_NUMBER }}
      TERRAFORM_ENV: ${{ steps.get-plan-info.outputs.TERRAFORM_ENV }}
      TERRAFORM_LAYER: ${{ steps.get-plan-info.outputs.TERRAFORM_LAYER }}
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3

      - name: Get plan data from issue.
        id: get-plan-info
        shell: bash
        run: |
          echo ${{ github.event.issue.body }}

          issue_body_file=issue_body.txt
          echo ${{ github.event.issue.body }} > $issue_body_file
          sed -i 's/\r$//' $issue_body_file

          terraform_env=$(grep -oP '(?<=Please approve or deny the deployment on ).*(?= for layer)' "$issue_body_file")
          terraform_layer=$(grep -oP '(?<=for layer ).*(?=\n)' "$issue_body_file")
          workflow=$(grep -oP '(?<=workflow \().*?(?=\))' "$issue_body_file")
          run_id=$(grep -oP '(?<=on run \().*?(?=\s\|)' "$issue_body_file")
          run_number=$(grep -oP '(?<=\| ).*?(?=\s\))' "$issue_body_file")

          echo "PLAN_WORKFLOW=$workflow"
          echo "PLAN_WORKFLOW_RUN_ID=$run_id"
          echo "PLAN_WORKFLOW_RUN_NUMBER=$run_number"
          echo "TERRAFORM_ENV=$terraform_env"
          echo "TERRAFORM_LAYER=$terraform_layer"

          echo "PLAN_WORKFLOW=$workflow" >> $GITHUB_OUTPUT
          echo "PLAN_WORKFLOW_RUN_ID=$run_id" >> $GITHUB_OUTPUT
          echo "PLAN_WORKFLOW_RUN_NUMBER=$run_number" >> $GITHUB_OUTPUT
          echo "TERRAFORM_ENV=$terraform_env" >> $GITHUB_OUTPUT
          echo "TERRAFORM_LAYER=$terraform_layer" >> $GITHUB_OUTPUT
